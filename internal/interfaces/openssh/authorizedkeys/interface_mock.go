// Code generated by mockery v2.46.0. DO NOT EDIT.

package authorizedkeys

import (
	context "context"
	x509 "crypto/x509"

	mock "github.com/stretchr/testify/mock"
)

// MockAuthorizedKeys is an autogenerated mock type for the AuthorizedKeys type
type MockAuthorizedKeys struct {
	mock.Mock
}

type MockAuthorizedKeys_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAuthorizedKeys) EXPECT() *MockAuthorizedKeys_Expecter {
	return &MockAuthorizedKeys_Expecter{mock: &_m.Mock}
}

// Get provides a mock function with given fields: ctx, user, fingerprint, rootCertificatePool
func (_m *MockAuthorizedKeys) Get(ctx context.Context, user *string, fingerprint *string, rootCertificatePool *x509.CertPool) []string {
	ret := _m.Called(ctx, user, fingerprint, rootCertificatePool)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 []string
	if rf, ok := ret.Get(0).(func(context.Context, *string, *string, *x509.CertPool) []string); ok {
		r0 = rf(ctx, user, fingerprint, rootCertificatePool)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// MockAuthorizedKeys_Get_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Get'
type MockAuthorizedKeys_Get_Call struct {
	*mock.Call
}

// Get is a helper method to define mock.On call
//   - ctx context.Context
//   - user *string
//   - fingerprint *string
//   - rootCertificatePool *x509.CertPool
func (_e *MockAuthorizedKeys_Expecter) Get(ctx interface{}, user interface{}, fingerprint interface{}, rootCertificatePool interface{}) *MockAuthorizedKeys_Get_Call {
	return &MockAuthorizedKeys_Get_Call{Call: _e.mock.On("Get", ctx, user, fingerprint, rootCertificatePool)}
}

func (_c *MockAuthorizedKeys_Get_Call) Run(run func(ctx context.Context, user *string, fingerprint *string, rootCertificatePool *x509.CertPool)) *MockAuthorizedKeys_Get_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*string), args[2].(*string), args[3].(*x509.CertPool))
	})
	return _c
}

func (_c *MockAuthorizedKeys_Get_Call) Return(_a0 []string) *MockAuthorizedKeys_Get_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockAuthorizedKeys_Get_Call) RunAndReturn(run func(context.Context, *string, *string, *x509.CertPool) []string) *MockAuthorizedKeys_Get_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockAuthorizedKeys creates a new instance of MockAuthorizedKeys. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAuthorizedKeys(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAuthorizedKeys {
	mock := &MockAuthorizedKeys{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
